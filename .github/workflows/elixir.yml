name: Deploy to fly.io

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    if: github.repository_owner == 'tjarratt'
    name: Build and test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:12
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@v1.18.2
      with:
        elixir-version: '1.15.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    # caching for deps/ directory
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    # caching for _build directory
    - name: Restore build cache
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix
    # bust the cache for incremental builds (apparently a cause of bugs)
    - name:
      if: github.run_attempt != 1
      run: |
        mix deps.clean --all
        mix clean
      shell: sh
    - name: Install dependencies
      run: mix deps.get
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    - name: Run tests
      run: MIX_ENV=test mix test
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
    - name: Dialyzer
      run: mix dialyzer
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}

  deploy:
    name: Deploy App
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: superfly/flyctl-actions/setup-flyctl@master
    - run: flyctl deploy --remote-only --build-secret BASIC_AUTH_PASSWORD=$BASIC_AUTH_PASSWORD
      env:
        BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

